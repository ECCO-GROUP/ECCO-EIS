This README file describes the ECCO Perturbation Tool, set up on
Pleiades. (21 July 2022. Ichiro Fukumori; fukumori@jpl.nasa.gov)

=========================================
Quick guide to run the Perturbation Tool
=========================================

Skip to step c) if you have already run setup_pert.csh. "pfe25>" denotes the
Unix prompt on Pleiades. 

a) Create and cd to some work directory. 

    pfe25>mkdir USRDIR

    pfe25>cd USRDIR

b) Set up perturbation tool.

    pfe25>source PUBLICDIR/setup_pert.csh

c) Specify perturbation (follow the prompt). 

    pfe25>pert.x 

d) Submit PBS job to run the Perturbation Tool's computation.

    pfe25>qsub pbs_pert.csh

e) Results will be generated in subdirectory emu_pert_*****/pert_result.


============
Description 
============

The Perturbation Tool computes the ECCO ocean model's (V4r4) response
to changes in forcing (controls); i.e., forward gradient.  The
gradients are useful for studying the ocean's response to forcing and
to assess the accuracy of the model's adjoint gradients (Adjoint
Tool).

The ocean model is the flux-forced version of ECCO's Version 4 release
4 (V4r4) ocean state estimate. The result of the Perturbation Tool
consists of differences in time-series of model state (sea level,
ocean bottom pressure, temperature, salinity, velocity) between model
integrations with and without the perturbation, normalized by dividing
the results by the amplitude of the perturbation. Perturbation to the
control is at a particular model grid point at a particular time
defined weekly, starting from 12Z January 01, 1992, which is the
starting instant of V4r4. The model time-step is 1-hour and the
perturbation is interpolated linearly in time.

To run the tool, do the following.  

Skip to step 3 if you have already run setup_pert.csh. "pfe25>" denotes the
Unix prompt on Pleiades. 

1) Create and cd to some work directory. Results and pertinent files
   will be created under this directory.

    pfe25>mkdir USRDIR

    pfe25>cd USRDIR

2) Set up Perturbation Tool.

    pfe25>source PUBLICDIR/setup_pert.csh

3) Specify perturbation

    pfe25>pert.x 

   Respond to the prompt (?) interactively. For instance, the example
   below perturbs "empmr" (evaporation minus precipitation minus river
   runoff) at the model's native grid point (85,601) at week 12 with
   magnitude -1e-3 (kg/m2/s).

Available control variables to perturb ...
    1) empmr
    2) pload
    3) qnet
    4) qsw
    5) saltflux
    6) spflx
    7) tauu
    8) tauv
   Enter control ... (1- 8) ?
1
  ..... perturbing empmr

Choose location for perturbation ...
    Enter 1 to choose native grid location (i,j),
          9 to select by latitude/longitude ... (1 or 9)?
1
    Enter native (i,j) grid to perturb ...
   i ... (1-90) ?
85
   j ... (1-1170) ?
601
  ...... perturbation at (i,j) =           85         601
        C-grid is (long E, lat N) =  -151.8  73.5
        Depth (m) =   3808.8

Enter week to perturb ... (1-1358) ?
12
  ...... perturbing week =           12

 Default perturbation =   -1.00000005E-03
        in unit kg/m2/s (upward freshwater flux)
 Enter 1 to keep, 9 to change ... ??
1
Perturbation amplitude =   -1.00000005E-03
        in unit kg/m2/s (upward freshwater flux)

 Wrote pert_xx.nml
 Wrote pert_xx.str

   Program pert.x will generate two text files pert_xx.nml and
   pert_xx.str that are used in PBS script pbs_pert.csh in step 5),
   and modify files data and pbs_pert.csh for integrating over
   user-specified period.

   File pert_xx.nml is a namelist file specifying the control
   perturbation. File pert_xx.str contains a character string for
   naming a directory ("run_directory") under the one created in step
   1), where the computation's result will be placed. The
   run_directory for the example above will be
   emu_pert_1_85_601_12_-1.00E-03, which bears a description of the
   perturbation in its name. The Perturbation Tool's result will be
   placed in sub-directory pert_result under this run_directory.

   Choosing a perturbation amplitude that is too large or too small
   may cause numerical inaccuracies. 

4) Submit PBS job to run the Perturbation Tool's computation. The
   computation will run V4r4 with the perturbed control and compare
   the results without the perturbation that's been pre-computed.

    pfe25>qsub pbs_pert.csh

5) Results of the computation will be generated in sub-directory
   pert_result under the "run_directory" (cf step 3).  The results
   include the following files.

    data:
        MITgcm namelist file specifying integration saved for
        reference. Modified by pert.x in step 3) 
        
    pert_xx.nml: 
	Namelist file with specifics of the perturbation saved for
	reference. Created by pert.x in step 3).

    state_2d_set1_day.*****.data
    state_2d_set1_day.*****.meta

    state_2d_set1_mon.*****.data
    state_2d_set1_mon.*****.meta

    state_3d_set1_mon.*****.data
    state_3d_set1_mon.*****.meta

        Forward gradient in MITgcm diagnostic output format; "data"
        are binary, "meta" are text files with "data" file
        information. The "*****" in the filenames are model time-steps
        (center step of average); each file corresponds to a
        particular instant. The fields are on the model's native grid.

        Files "state_2d_set1_day" have gradients of daily mean dynamic
        sea level (ssh) and ocean bottom pressure (obp). Files
        "state_2d_set1_mon" have monthly means of these same
        variables. Units are meters for both variables (equivalent sea
        level for obp) per unit perturbation of the chosen
        control.

	Files "state_3d_set1_mon" have monthly mean temperature
	(theta; deg C), salinity (salt; PSU), i-direction velocity
	(uvel; m/s), and j-direction velocity (vvel; m/s). (Values are
	for unit perturbation of the chosen control.)

        Units and direction of the different controls are (as noted by
        pert.x prompts), 

	ctrl (1) = 'empmr'   'kg/m2/s (upward freshwater flux)' 
        ctrl (2) = 'pload'   'N/m2 (downward surface pressure loading)'
	ctrl (3) = 'qnet'    'W/m2 (net upward heat flux)'
        ctrl (4) = 'qsw'     'W/m2 (net upward shortwave radiation)'
	ctrl (5) = 'saltflux''g/m2/s (net upward salt flux)'
        ctrl (6) = 'spflx'   'g/m2/s (net downward salt plume flux)'
	ctrl (7) = 'tauu'    'N/m2 (westward wind stress)'
        ctrl (8) = 'tauv'    'N/m2 (southward wind stress)'       

        Example code to read temperature, theta (the first record;
        irec), from file state_3d_set1_mon.0000012396.data as variable
        "fvar".

    FORTRAN
    --------
      integer nx, ny, nr
      parameter (nx=90, ny=1170, nr=50)
      integer irec
      real*4 fvar(nx,ny,nr)
      character*256 f_in

      f_in = 'state_3d_set1_mon.0000012396.data'
      open(60, file=f_in, access='direct',
     $     recl=nx*ny*nr*4, form='unformatted')

      irec = 1
      read(60,rec=irec) fvar


    IDL
    ---
      nx = 90
      ny = 1170
      nr = 50

      f_in = 'state_3d_set1_mon.0000012396.data'
      close,1 & openr,1,f_in,/swap_if_little_endian
      d_file = assoc(1,fltarr(nx,ny,nr))

      irec = 0
      fvar = d_file(irec) 


    MATLAB
    -------
      nx = 90; 
      ny = 1170; 
      nr = 50;

      f_in = 'state_3d_set1_mon.0000012396.data';
      fid=fopen(f_in,'r','ieee-be');

      irec = 1; 
      status=fseek(fid,(irec-1)*(nx*ny*nr*4),'bof');
      fvar=fread(fid, [nx*ny*nr], 'single');
      fvar=reshape(fvar, [nx,ny,nr]);
      fclose(fid);

  
    PYTHON
    -------
      import numpy as np 
      nx = 90
      ny = 1170 
      nr = 50

      f_in = 'state_3d_set1_mon.0000012396.data'
      dt =  np.dtype([ ('fld', '>f4', (nr,ny,nx))])
      d_file = np.fromfile(f_in,dtype=dt)

      irec = 0 
      fvar = d_file['fld'][irec]

