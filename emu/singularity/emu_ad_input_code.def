Bootstrap: library
From: ubuntu:22.04

%files
    hello.f /opt
    emu.tar /opt 

%environment
    export OMPI_DIR=/opt/ompi
    export SINGULARITY_OMPI_DIR=$OMPI_DIR
    export SINGULARITYENV_APPEND_PATH=$OMPI_DIR/bin
    export SINGULARITYENV_APPEND_LD_LIBRARY_PATH=$OMPI_DIR/lib

    export PATH=./:$OMPI_DIR/bin:$PATH
    export LD_LIBRARY_PATH=$OMPI_DIR/lib:$LD_LIBRARY_PATH
    export MANPATH=$OMPI_DIR/share/man:$MANPATH

    export emu_dir=/ecco
    export out_dir=/inside_out
    export alt_dir=/inside_alt

%post
    echo "Installing required packages..."
    apt-get update && apt-get install -y wget git bash gcc gfortran g++ make file vim emacs bzip2
    apt-get install -y csh tcsh netcdf-bin python3        	    
    apt-get install -y parallel 

    mkdir /inside_out 
    mkdir /emu_input_dir

#    mkdir /home
#    mkdir /home1
#    mkdir /home2
#    mkdir /home3
#    mkdir /home4
#    mkdir /home5
#    mkdir /home6
#    mkdir /home7
    
# OpenMPI -------------------------------------------------------
    echo "Installing Open MPI ... "
    export OMPI_DIR=/opt/ompi
    export OMPI_VERSION=4.1.5
    export OMPI_URL="https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-$OMPI_VERSION.tar.bz2"
    mkdir -p /opt
    mkdir -p /opt/ichiro_tmp
# Download
    cd /opt/ichiro_tmp
    wget -O openmpi-$OMPI_VERSION.tar.bz2 $OMPI_URL
    tar -xjf ./openmpi-$OMPI_VERSION.tar.bz2
# Compile and install
    cd /opt/ichiro_tmp/openmpi-$OMPI_VERSION && ./configure --prefix=$OMPI_DIR && make install
    rm -rf /opt/ichiro_tmp

# Set env variables so we can compile our application
    export PATH=$OMPI_DIR/bin:$PATH
    export LD_LIBRARY_PATH=$OMPI_DIR/lib:$LD_LIBRARY_PATH
    export MANPATH=$OMPI_DIR/share/man:$MANPATH

# Compile hello.f 
    echo "Compiling MPI test application /opt/hello.f ..."
    cd /opt && mpif77 -o hello.x hello.f

# EMU -------------------------------------------------------
# 1) Create and cd to a work directory.
    mkdir /ecco
    cd /ecco

# 2) Untar emu
    tar -xvf /opt/emu.tar
    rm /opt/emu.tar

# 3) Compile emu
    cd emu
    mkdir exe
    make all

# 4) Compile MITgcm used by EMU, viz. 
#    Forward and adjoint of flux-forced V4r4
#    Forward and adjoint of passive tracer code 
    cd singularity
    echo "13" | ./emu_ad_input_code.sh 
    echo "36" | ./emu_ad_input_code.sh 
    echo "48" | ./emu_ad_input_code.sh 
    echo "68" | ./emu_ad_input_code.sh 
    echo "72" | ./emu_ad_input_code.sh 
    echo "96" | ./emu_ad_input_code.sh 
    echo "192" | ./emu_ad_input_code.sh 
    echo "360" | ./emu_ad_input_code.sh 

# 5) Clean up MITgcm compilation 
#    cd $emu_dir
#    rm -rf WORKDIR

%labels
    Ichiro Fukumori
    
%help 
    This is EMU in a Singularity container. 

