; IDL program to rectify 3d mask for Adjoint Tool. (9/6/2024)
;
; Adjoint code has bug using EMU's 3d mask (bug multiplies volume of
; each cell). This IDL program reads EMU's 3d mask (generated by
; either Adjoint Tool or misc_mask.sh) and outputs a rectified version
; of the mask that can be used by the Adjoint code that has the bug. 
;
; .run rectify_mask3d.pro

common emu_grid, nx, ny, nr, xc, yc, rc, dxc, dyc, drc, $
   xg, yg, dxg, dyg, rf, drf, hfacc, hfacw, hfacs, $
   cs, sn, rac, ras, raw, raz, dvol3d

; Suppress the % Compiled module: print out
!QUIET = 1

; ---------------
; Add EMU's directory of idl programs in IDL's path 

; Get the current script's full path using SCOPE_TRACEBACK
traceback = SCOPE_TRACEBACK(/STRUCTURE)
currentRoutinePath = traceback[0].FILENAME

; Extract the directory from the full path
currentDir = FILE_DIRNAME(currentRoutinePath)
;PRINT, 'Current directory:', currentDir

; Check if the directory is already in !PATH
if STRPOS(':' + !PATH + ':', ':' + currentDir + ':') eq -1 then begin
    ; Add the current directory to !PATH
    !PATH = !PATH + ':' + currentDir
    !PATH = !PATH + ':' + currentDir + '/lib_idl'
;    PRINT, 'Directory added to !PATH:', currentDir
endif else begin
;    PRINT, 'Directory already in !PATH:', currentDir
end

;; Print the updated !PATH
;PRINT, '!PATH:', !PATH
emu_plot_dir=currentDir

; ---------------
; Run lib_xwin (set up plotting environment)

lib_xwin,currentDir+'/lib_idl'

; ---------------
; Read emu_ref location

emu_access_dir=file_dirname(emu_plot_dir)
;print,'emu_access_dir=',emu_access_dir

; Find all files in the directory excluding 'emu_env.sh'
files = FILE_SEARCH(emu_access_dir + '/emu_env.*', COUNT=count)
filteredFiles = []

FOR i = 0, count-1 DO BEGIN
    IF FILE_BASENAME(files[i]) NE 'emu_env.sh' THEN filteredFiles = [filteredFiles, files[i]]
ENDFOR

; Check if there is only one file left after filtering
IF N_ELEMENTS(filteredFiles) EQ 1 THEN BEGIN
    fileToRead = filteredFiles[0]
;    PRINT, 'Reading file: ', fileToRead
    
    ; Open the file and read it line by line
    OPENR, lun, fileToRead, /GET_LUN
    line = ''
    emu_input_dir = ''
    WHILE NOT EOF(lun) DO BEGIN
        READF, lun, line
        ; Check if the line starts with 'input_'
        IF STRPOS(line, 'input_') EQ 0 THEN BEGIN
            emu_input_dir = STRMID(line, 6, STRLEN(line) - 6) ; Extract the part after 'input_'
            BREAK
        ENDIF
    ENDWHILE
    FREE_LUN, lun
    
    ; Print the extracted emu_input_dir
    IF emu_input_dir NE '' THEN BEGIN
        PRINT, 'EMU Input Files directory: ', emu_input_dir
    ENDIF ELSE BEGIN
        PRINT, 'No line starting with "input_" found in the file.'
    ENDELSE
ENDIF ELSE BEGIN
    PRINT, 'Error: There are either no files or more than one file excluding emu_env.sh in the directory.'
ENDELSE

; ---------------
; Read model grid information 

emu_ref=emu_input_dir + '/emu_ref'
;print,'emu_ref = ',emu_ref
rd_grid, emu_ref

; ---------------
; Read in mask from EMU 

fmask = ' '
print,"Enter EMU-made 3d mask file name ... ?"
read, fmask 

msk=fltarr(nx,ny,nr)

close,1 & openr,1,fmask,/swap_if_little_endian
readu,1,msk

; ---------------
; Create rectified mask 
ok = where(dvol3d ne 0, nok)
msk2 = fltarr(nx,ny,nr)
msk2(ok) = msk(ok)/dvol3d(ok)

fout = fmask + '_rectified'
print,"Rectified mask output to ... ",fout

close,6 & openw,6,fout,/swap_if_little_endian
writeu,6,msk2
close,6

end
