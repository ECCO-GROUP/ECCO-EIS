This README file describes the ECCO Sampling Tool, set up on
Pleiades. (05 December 2022. Ichiro Fukumori; fukumori@jpl.nasa.gov)

=========================================
Quick guide to run the Sampling Tool
=========================================

Skip to step c) if you have already run setup_samp.csh. "pfe25>"
denotes the Unix prompt on Pleiades.

a) Create and cd to some work directory (USRDIR, change as preferred).

    pfe25>mkdir USRDIR

    pfe25>cd USRDIR

b) Set up Sampling Tool.

    pfe25>source PUBLICDIR/setup_samp.csh

c) Specify Objective Function (follow the prompt). 

    pfe25>samp.x 

d) Run Sampling Tool's computation.

    pfe25>do_samp.x 

e) Results will be generated in subdirectory emu_samp_*****


============
Description 
============

The Sampling Tool extracts time-series of a user-defined variable of
the model, hereafter the Objective Function (J). The Objective
Function can simply be one of the standard state variables (v; sea
level, ocean bottom pressure, temperature, salinity, velocity) at a
particular model grid point or a user-defined linear function
(combination, transformation) of these variables (e.g., spatial
integral, steric sea level). In its general form, the Objective
Function is written as,

    J(t) = sum_i alpha_i sum_x T_i(x) * v_i(x,t)

where "t" is time, "alpha" is a scalar multiplication factor
(scaling), "T" is a linear operator (weight) in space (x), and
subscript i distinguishes different variables. (The Tool allows the
Objective Function to be a combination of any number of variables.)

The Sampling Tool is useful for assessing the fidelity of V4r4; e.g.,
comparison to observations.

To run the tool, do the following.  

Skip to step 3 if you have already run setup_samp.csh. "pfe25>"
denotes the Unix prompt on Pleiades.

1) Create and cd to some work directory. Results and pertinent files
   will be created under this directory.

    pfe25>mkdir USRDIR

    pfe25>cd USRDIR

2) Set up Sampling Tool.

    pfe25>source PUBLICDIR/setup_samp.csh

3) Specify quantity of interest (Objective Function) by running
   program samp.x and responding to its prompts.

   The example below extracts monthly-mean time-series of dynamic sea
   level at a model grid point closest to 148W 73.1N, which is model
   grid point (85, 604).

   pfe27>samp.x

   Extracting model time-series ...

   Define objective function (OBJF) ...
 
    Available VARIABLES are ...   List of variables for Objective Function. cf Table 2  
    1) SSH (m)
    2) OBP (equivalent sea level m)
    3) THETA (deg C)
    4) SALT (PSU)
    5) UV (m/s)

     Monthly or Daily mean ... (m/d)?
     (NOTE: daily mean available for SSH and OBP only.)
    m

    fmd = m
      ==> Sampling MONTHLY means ...

   ------------------
      Choose OBFJ variable # 1 ... (1-5)?  
      (Enter 0 to end variable selection)
    1 

     OBJF variable  1 is SSH
     Choose either VARIABLE at a point (1) or VARIABLE weighted in space (2) ... (1/2)?
    1      
    ... OBJF will be a scaled VARIABLE at a point
     i.e., MULT * VARIABLE

   Choose horizontal location ...
      Enter 1 to select native grid location (i,j),
        or 9 to select by longitude/latitude ... (1 or 9)?
    9

      Enter location's lon/lat (x,y) ...
         longitude ... (E)?
   -148
         latitude ... (N)?
   73.1

     ...... Chosen point is (i,j) = 85   604.   
            C-grid is (long E, lat N) = -148.1  73.2
            Depth (m)=  3675.7

      Enter scaling factor MULT ... ?        
   1.
      amult =   1.0000E+00

   ------------------
      Choose OBFJ variable # 2 ... (1-5)?  
      (Enter 0 to end variable selection)
   0

   Sampling Tool output will be in : emu_samp_m_1_85_604_1.    

   ... Done samp setup of data.ecco

4) Run executable do_samp.x to extract time-series of the Objective
   Function specified in 3). (Sampling Tool does not require a PBS
   job.)

    pfe20>do_samp.x

    Sampling Tool output will be in : emu_samp_m_2_85_604_1

    nobjf = 1
    Sampling MONTHLY means ...


     Mask file : objf_1_mask_C 
     Masks maximum absolute value =   1.0000E+00
	at (i,j) =   85   604

     ... Done.

5) The Sampling Tool creates output in a directory bearing
   specification of the extracted variable (Objective Function) in its
   name, which is emu_samp_m_1_85_604_1 for the case above. Here
   "emu_samp" indicates output from the Sampling Tool, "m" for monthly
   mean variable, "1" for SSH, "85_604" for location (i,j)=(85, 604),
   and the last "1" for number of variables defining the Objective
   Function (nobjf=1).

   The files in this directory for the example above are.  

   pfe24>ls -l emu_samp_m_85_604_1
   total 16
   -rw-r--r-- 1 ifukumor g26113  332 Dec  1 19:13 data.ecco
   -rw-r--r-- 1 ifukumor g26113  465 Dec  1 19:13 samp.info
   -rw-r--r-- 1 ifukumor g26113 1252 Dec  1 19:13 samp.out_312
   -rw-r--r-- 1 ifukumor g26113 1248 Dec  1 19:13 samp.step_312

   The sampled variable is in file samp.out_312 as an anomaly
   time-series from its time-mean in binary format; The last number
   after "_" indicates the number of records in the anomaly
   time-series, which in this case is 312 monthly mean values from
   1992 to 2017 of V4r4's analysis period. The time-mean reference
   value is given as the last variable in the file (313th in the
   example above.) File samp.step_312 has the time record of the
   time-series, defined as the end instant of each averaging period
   (e.g., end of the month), in terms of the model's time-step (1-hour
   time-step from 12Z January 1, 1992.) An example FORTRAN code to
   read this output file is given below.

   File samp.info is a text file summarizing the user-defined
   Objective Function and file data.ecco is an ECCO MITgcm input file
   defining the objective function.

FORTRAN
      integer nrec
      parameter (nrec=312)
      real*4 anom(nrec), ref
      character*256 f_in
      integer istep(nrec)

      f_in = 'samp.out _312'
      open(60, file=trim(f_in), action='read', access='stream')
      read(60) anom       !  Anomaly time-series of the Objective Function.
      read(60) ref        !  Time-mean reference of the anomaly. 
      close(60)

      f_in = 'samp.step _312'
      open(61, file=trim(f_in), action='read', access='stream')
      read(61) istep      !  Time of variable "anom" read above.
      close(61)







